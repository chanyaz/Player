buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4'
    }
}
plugins {
    id "net.ltgt.apt" version "0.15"
}

apply plugin: 'com.android.application'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

ext {
    buildToolsVersion = '27.0.3'
    supportLibVersion = '27.1.1'
    archRoomVersion = '1.1.0'
    archLifecycleVersion = '1.1.1'
    rxJavaVersion = '2.1.13'
    rxAndroidVersion = '2.0.2'
    butterknifeVersion = '8.8.1'
    fabricAnswersVersion = '1.4.2@aar'
}

android {
    signingConfigs {
        release {
            // Values here are replaced by settings in 'keystore.properties'.
            storeFile file("my.keystore")
            storePassword "store_password"
            keyAlias "my_key_alias"
            keyPassword "key_password"
        }
    }

    compileSdkVersion 27
    buildToolsVersion buildToolsVersion

    defaultConfig {
        applicationId "org.willemsens.player"

        minSdkVersion 21
        targetSdkVersion 27

        versionCode 16
        versionName "0.2.6"
        resValue "string", "app_version", "${defaultConfig.versionName}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            buildConfigField "boolean", "USE_ANSWERS", "true"
            ext.enableCrashlytics = true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            buildConfigField "boolean", "USE_ANSWERS", "false"
            ext.enableCrashlytics = false
            minifyEnabled false
            useProguard false
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation(group: 'com.google.firebase', name: 'firebase-core', version: '16.0.1')
    implementation(group: 'com.crashlytics.sdk.android', name: 'crashlytics', version: '2.9.4')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation(group: 'com.android.support', name: 'appcompat-v7', version: supportLibVersion)
    implementation(group: 'com.android.support', name: 'design', version: supportLibVersion)
    implementation(group: 'com.android.support', name: 'support-v4', version: supportLibVersion)
    implementation(group: 'com.android.support', name: 'recyclerview-v7', version: supportLibVersion)
    implementation(group: 'com.android.support', name: 'support-annotations', version: supportLibVersion)

    implementation(group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0')
    implementation(group: 'com.google.code.gson', name: 'gson', version: '2.8.3')
    implementation(group: 'commons-io', name: 'commons-io', version: '2.6')
    implementation(group: 'com.google.android.exoplayer', name: 'exoplayer-core', version: '2.7.1')

    implementation(group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJavaVersion)
    implementation(group: 'io.reactivex.rxjava2', name: 'rxandroid', version: rxAndroidVersion)

    implementation(group: 'org.willemsens', name: 'mp3-vbr-length', version: '1.0')

    implementation(group: 'android.arch.lifecycle', name: 'runtime', version: archLifecycleVersion)
    implementation(group: 'android.arch.lifecycle', name: 'extensions', version: archLifecycleVersion)
    implementation(group: 'android.arch.persistence.room', name: 'runtime', version: archRoomVersion)
    annotationProcessor(group: 'android.arch.persistence.room', name: 'compiler', version: archRoomVersion)
    implementation(group: 'com.jakewharton', name: 'butterknife', version: butterknifeVersion)
    annotationProcessor(group: 'com.jakewharton', name: 'butterknife-compiler', version: butterknifeVersion)
    implementation(group: 'com.crashlytics.sdk.android', name: 'answers', version: fabricAnswersVersion) {
        transitive = true
    }
    implementation(group: 'net.jthink', name: 'jaudiotagger', version: '2.2.6-SNAPSHOT')
    implementation(group: 'com.squareup', name: 'otto', version: '1.3.8')

    testImplementation 'junit:junit:4.12'
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('app/keystore.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}
